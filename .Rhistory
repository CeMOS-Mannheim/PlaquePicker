scale_y_log10() +
theme_bw() +
labs(x = "Size Group",
y = "Ratio Ab1-42Arc/Ab1-38Arc")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
install.packages("igraph")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
install.packages("installr")
library(installr)
installr()
install.packages("ymlthis")
install.packages("yaml")
install.packages("stringr")
install.packages("tidyr")
install.packages("tidyverse")
install.packages("magrittr")
install.packages("R6")
install.packages("generics")
install.packages("pkgconfig")
install.packages("purrr")
install.packages("scales")
install.packages("LEANR")
install.packages("learnr")
install.packages("munsell")
install.packages("Rcpp")
install.packages("MALDIquantForeign")
install.packages("readMzXmlData")
install.packages("XML")
install.packages("XML")
install.packages("XML")
devtools::install_github("js229/Vennerable")
install.packages(memoise)
install.packages("memoise")
install.packages(memoise)
devtools::install_github("js229/Vennerable")
install.packages("pkgbuild")
devtools::install_github("js229/Vennerable")
install.packages("processx")
devtools::install_github("js229/Vennerable")
install.packages("ps")
devtools::install_github("js229/Vennerable")
install.packages("prettyunits")
devtools::install_github("js229/Vennerable")
install.packages("pkgload")
devtools::install_github("js229/Vennerable")
install.packages(withr)
install.packages("withr")
devtools::install_github("js229/Vennerable")
install.packages("desc")
devtools::install_github("js229/Vennerable")
install.packages("rprojroot")
devtools::install_github("js229/Vennerable")
install.packages("remotes")
devtools::install_github("js229/Vennerable")
install.packages("sessioninfo")
devtools::install_github("js229/Vennerable")
devtools::install_github("js229/Vennerable", force = TRUE)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install(version = "3.11")
BiocManager::install(version = "3.11")
BiocManager::install(version = "3.11")
install.packages("fs")
install.packages("fs")
BiocManager::install(version = "3.11")
BiocManager::install(version = "3.11")
BiocManager::install("RBGL")
BiocManager::install("RBGL")
BiocManager::install("RBGL")
BiocManager::install("RBGL")
install.packages("survival")
BiocManager::install("RBGL")
BiocManager::install("graph")
devtools::install_github("js229/Vennerable")
devtools::install_github("js229/Vennerable", force = TRUE)
install.packages("RColorBrewer")
devtools::install_github("js229/Vennerable", force = TRUE)
install.packages("readBrukerFlexData")
install.packages("readr")
install.packages("viridisLite")
install.packages("viridis")
install.packages("gridExtra")
install.packages("labeling")
install.packages("igraph")
library(Vennerable)
devtools::document()
rm(plot_venn())
rm(plot_venn)
devtools::document()
knitr::opts_chunk$set(dpi=600,fig.width=8)
plot_venn(pp, mzNames = c("Ab1-38Arc",
"Ab1-39Arc",
"Ab1-42Arc"),
relative = FALSE)
library(PlaquePicker)
plot_venn(pp, mzNames = c("Ab1-38Arc",
"Ab1-39Arc",
"Ab1-42Arc"),
relative = FALSE)
debugonce(plot_venn)
plot_venn(pp, mzNames = c("Ab1-38Arc",
"Ab1-39Arc",
"Ab1-42Arc"),
relative = FALSE)
Vennerable::Venn(PlaqueIDs_venn)
plot(venn)
devtools::load_all()
plot_venn(pp, mzNames = c("Ab1-38Arc",
"Ab1-39Arc",
"Ab1-42Arc"),
relative = FALSE)
devtools::document()
library(PlaquePicker)
knitr::opts_chunk$set(dpi=600,fig.width=8)
ggplot(df, aes(x = size)) +
geom_histogram(bins = 50) +
theme_bw() +
labs(x = "Plaque area [um²]")
library(ggplot2)
ggplot(df, aes(x = size)) +
geom_histogram(bins = 50) +
theme_bw() +
labs(x = "Plaque area [um²]")
knit_with_parameters('~/R/plaquepicker/vignette.Rmd', encoding = 'UTF-8')
install.packages("utf8")
tinytex::install_tinytex()
tinytex:::is_tinytex()
View(pp)
knitr::opts_chunk$set(dpi=600,fig.width=8)
df_size %>%
group_by(sizeGroup) %>%
summarise(n = length(unique(ID))) %>%
ggplot(aes(x = sizeGroup, y = n, label = n)) + geom_col() +
geom_text(y = 100)
library(tidyverse)
df_size %>%
group_by(sizeGroup) %>%
summarise(n = length(unique(ID))) %>%
ggplot(aes(x = sizeGroup, y = n, label = n)) + geom_col() +
geom_text(y = 100)
df_size %>%
group_by(sizeGroup) %>%
summarise(n = length(unique(ID))) %>%
ggplot(aes(x = sizeGroup, y = n, label = n)) +
geom_col() +
geom_text(y = 100) +
theme_bw() +
labs(x = "Size group",
y = "Number of observations")
df_size %>%
group_by(sizeGroup) %>%
summarise(n = length(unique(ID)))
df_size <- df %>%
group_by(ID) %>%
mutate(sizeGroup = ifelse(size <= 400, "small",
ifelse(size <= 2000, "medium", "big"))) %>%
ungroup()
df_size %>%
group_by(sizeGroup) %>%
summarise(n = length(unique(ID))) %>%
ggplot(aes(x = sizeGroup, y = n, label = n)) +
geom_col() +
geom_text(y = 100) +
theme_bw() +
labs(x = "Size group",
y = "Number of observations")
df_size %>%
group_by(sizeGroup) %>%
summarise(n = length(unique(ID)), .groups = "drop_last") %>%
ggplot(aes(x = sizeGroup, y = n, label = n)) +
geom_col() +
geom_text(y = 100) +
theme_bw() +
labs(x = "Size group",
y = "Number of observations")
df
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6")
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, val, -size)
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, val, -size, -ID)
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>%
group_by(ID, mz) %>%
summarise(meanInt = mean(int),
size = first(size))
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>%
group_by(ID, mz) %>%
summarise(meanInt = mean(int),
size = first(size)) %>%
spread(mz, int)
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>%
group_by(ID, mz) %>%
summarise(meanInt = mean(int),
size = first(size)) %>%
spread(mz, meanInt)
View(df)
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>%
group_by(ID, mz) %>%
summarise(meanInt = mean(int),
size = first(size)) %>%
spread(mz, meanInt) %>% View()
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>% View()
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>% View()
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>%
group_by(ID, mz) %>%
summarise(meanInt = mean(int)) %>%  View()
df
df <- bind_rows(pp$unified$intensities, .id = "ID") %>%
mutate(ID = as.numeric(ID)) %>%
group_by(ID) %>%
mutate(size = n() * 400)
head(df)
ggplot(df, aes(x = size)) +
geom_histogram(bins = 40) +
theme_bw() +
labs(x = "Plaque area [um²]")
df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>%
group_by(ID, mz) %>%
summarise(meanInt = mean(int)) %>%  View()
spread(mz, meanInt)
df_mean <- df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>%
group_by(ID, mz) %>%
summarise(meanInt = mean(int)) %>%
spread(mz, meanInt)
head(df_mean)
df_mean <- df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>%
group_by(ID, mz) %>%
summarise(meanInt = mean(int),
size = first(size),
.groups = "drop_last") %>%
spread(mz, meanInt)
head(df_mean)
df_size <- df_mean %>%
group_by(ID) %>%
mutate(sizeGroup = ifelse(size <= 400,
"small",
ifelse(size <= 2000,
"medium",
"big")))
df_size %>%
group_by(sizeGroup) %>%
summarise(n = length(unique(ID)), .groups = "drop_last") %>%
ggplot(aes(x = sizeGroup,
y = n,
label = n)) +
geom_col() +
geom_text(y = 100) +
theme_bw() +
labs(x = "Size group",
y = "Number of observations")
df_size %>%
mutate(ratio = Ab1_42Arc/Ab1_38Arc) %>%
ggplot(aes(x = sizeGroup, y = ratio)) +
geom_boxplot() +
scale_y_log10() +
theme_bw() +
labs(x = "Size Group",
y = "Ratio Ab1-42Arc/Ab1-38Arc")
ggplot(aes(x = mz, y = meanInt)) %>%
geom_boxplot()
df_mean <- df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>%
group_by(ID, mz) %>%
summarise(meanInt = mean(int),
size = first(size),
.groups = "drop_last")
head(df_mean)
ggplot(aes(x = mz, y = meanInt)) %>%
geom_boxplot()
ggplot(df_mean, aes(x = mz, y = meanInt)) %>%
geom_boxplot()
df_mean <- df %>%
ungroup() %>%
rename("Ab1_38Arc" = "4059.9",
"Ab1_39Arc" = "4159.1",
"Ab1_42Arc" = "4442.6") %>%
group_by(ID) %>%
gather(mz, int, -size, -ID) %>%
group_by(ID, mz) %>%
summarise(meanInt = mean(int),
size = first(size),
.groups = "drop_last")
df_mean %>%
spread(mz, meanInt) %>%
head()
ggplot(df_mean, aes(x = mz, y = meanInt)) +
geom_boxplot()
ggplot(df_mean, aes(x = mz, y = meanInt)) +
geom_boxplot() +
theme_bw() +
labs(x = "Abeta species",
y = "Mean plaque Int. [a.u.]")
knitr::opts_chunk$set(dpi=600,fig.width=8)
if(!require(MALDIquant))
install.packages("MALDIquant", repos = "http://cran.us.r-project.org", dependencies = TRUE)
if(!require(MALDIquantForeign))
install.packages("MALDIquantForeign", repos = "http://cran.us.r-project.org", dependencies = TRUE)
# install devtools to be able to install packages from github
if(!require(devtools))
install.packages("devtools", repos = "http://cran.us.r-project.org", dependencies = TRUE)
#devtools::install_github("CeMOS-Mannheim/plaquePicker")
# The following dependencies are not needed to use the core functions of the package
# but will be used in this vignette
if(!require(tidyverse))
install.packages("tidyverse", repos = "http://cran.us.r-project.org",dependencies = TRUE)
if(!require(viridis))
install.packages("viridis", repos = "http://cran.us.r-project.org",dependencies = TRUE)
# for the plotting of Venn-Diagrams we will be using the package Vennerable
# which is not in the CRAN repository and has some dependencies to the
# BioConductor repository.
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", repos = "http://cran.us.r-project.org")
BiocManager::install(version = "3.11")
if(!require(RBGL))
BiocManager::install("RBGL")
if(!require(graph))
BiocManager::install("graph")
if(!require(Vennerable))
devtools::install_github("js229/Vennerable")
remove.packages("Vennerable", lib="~/R/win-library/4.0")
knitr::opts_chunk$set(dpi=600,fig.width=8)
if(!require(MALDIquant))
install.packages("MALDIquant", repos = "http://cran.us.r-project.org", dependencies = TRUE)
if(!require(MALDIquantForeign))
install.packages("MALDIquantForeign", repos = "http://cran.us.r-project.org", dependencies = TRUE)
# install devtools to be able to install packages from github
if(!require(devtools))
install.packages("devtools", repos = "http://cran.us.r-project.org", dependencies = TRUE)
#devtools::install_github("CeMOS-Mannheim/plaquePicker")
# The following dependencies are not needed to use the core functions of the package
# but will be used in this vignette
if(!require(tidyverse))
install.packages("tidyverse", repos = "http://cran.us.r-project.org",dependencies = TRUE)
if(!require(viridis))
install.packages("viridis", repos = "http://cran.us.r-project.org",dependencies = TRUE)
# for the plotting of Venn-Diagrams we will be using the package Vennerable
# which is not in the CRAN repository and has some dependencies to the
# BioConductor repository.
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", repos = "http://cran.us.r-project.org")
BiocManager::install(version = "3.11")
if(!require(RBGL))
BiocManager::install("RBGL")
if(!require(graph))
BiocManager::install("graph")
if(!require(Vennerable))
devtools::install_github("js229/Vennerable")
devtools::build_vignettes()
# unzip spectra
unzip("data-raw/NLGF67w_mouse1_rep1.zip")
# read spectra
spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
# unzip spectra
unzip("data-raw/NLGF67w_mouse1_rep1.zip")
# unzip spectra
unzip("data-raw/NLGF67w_mouse1_rep1.zip")
unzip("data-raw/NLGF67w_mouse1_rep1.zip")
# unzip spectra
unzip("data-raw/NLGF67w_mouse1_rep1.zip")
# read spectra
spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
# unzip spectra
unzip("data-raw/NLGF67w_mouse1_rep1.zip")
# read spectra
spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
# unzip spectra
unzip("data-raw/NLGF67w_mouse1_rep1.zip")
getwd()
# unzip spectra
unzip("/data-raw/NLGF67w_mouse1_rep1.zip")
# read spectra
spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
# unzip spectra
unzip("/data-raw/NLGF67w_mouse1_rep1.zip")
# unzip spectra
unzip("data-raw/NLGF67w_mouse1_rep1.zip")
# read spectra
spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
getwd()
# unzip spectra
unzip("data/NLGF67w_mouse1_rep1.zip")
# read spectra
spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
# unzip spectra
unzip("data/NLGF67w_mouse1_rep1.zip")
# read spectra
spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
# unzip spectra
unzip("data/NLGF67w_mouse1_rep1.zip")
unzip("data/NLGF67w_mouse1_rep1.zip")
# unzip spectra
unzip("data/NLGF67w_mouse1_rep1.zip")
# read spectra
spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
getwd()
# unzip spectra
#unzip("data/NLGF67w_mouse1_rep1.zip")
# read spectra
#spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
getwd()
dirname()etwd())
dirname(getwd())
# unzip spectra
unzip( "vignettes/NLGF67w_mouse1_rep1.zip")
# read spectra
spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
# unzip spectra
unzip( "vignettes/NLGF67w_mouse1_rep1.zip")
unzip( "vignettes/NLGF67w_mouse1_rep1.zip")
# unzip spectra
unzip( "NLGF67w_mouse1_rep1.zip")
# read spectra
spec <- importImzMl("NLGF_Prot_NLGF1.imzML",
verbose = FALSE)
devtools::build_vignettes()
